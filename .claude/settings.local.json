{
  "permissions": {
    "allow": [
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/Arc 2 â€” Shadow/Arc 2 Shadow/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/Arc 3 â€” Light/Arc 3 Light/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/1ABEL â€” All rights reserved/1ABEL All rights reserved/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/collectionâ€”/collection:/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/collectionâ€”it/collection. It/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/archetypesâ€”pieces/archetypes. Pieces/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/ARC 2 â€” SHADOW/ARC 2 SHADOW/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/ARC 3 â€” LIGHT/ARC 3 LIGHT/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/principleâ€”that/principle: that/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/Arcsâ€”complete/Arcs. Complete/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/fashionâ€”creating/fashion. Creating/g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/ â€” Size / Size /g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/Arc 2 â€” /Arc 2 /g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i \"s/Arc 3 â€” /Arc 3 /g\" {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/â€”/:/g' {} ;)",
      "Bash(git commit -m \"$(cat <<''EOF''\nUpdate Spotify links and remove all em dashes from site copy\n\nSPOTIFY PLAYLIST UPDATES:\n- Arc 2 Shadow: Updated to https://spotify.link/w2kUeaFYDXb\n- Arc 3 Light: Updated to https://spotify.link/qEQY5uDYDXb\n\nREMOVED ALL EM DASHES (â€”):\n- Replaced \"Arc 2 â€” Shadow\" with \"Arc 2 Shadow\" throughout\n- Replaced \"Arc 3 â€” Light\" with \"Arc 3 Light\" throughout  \n- Replaced \"ARC 2 â€” SHADOW\" with \"ARC 2 SHADOW\" in navigation\n- Replaced \"ARC 3 â€” LIGHT\" with \"ARC 3 LIGHT\" in navigation\n- Changed \"1ABEL â€” All rights reserved\" to \"1ABEL All rights reserved\"\n- Converted em dashes in product stories to colons or periods\n- Updated all footer links and headers across 99 pages\n\nRATIONALE:\n- Em dashes are AI-typical and overused in generated content\n- Cleaner, more direct copy feels more authentic\n- Maintains premium aesthetic without clichÃ© punctuation\n- Spotify short links are cleaner and more shareable\n\nBuild successful: 99 pages generated\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/creation:/creationâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/you:/youâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/chaos:/chaosâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/states:/statesâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/cocoon:/cocoonâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/there:/thereâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/utility:/utilityâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/sweats:/sweatsâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/fade:/fadeâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/pace:/paceâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/spot:/spotâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/balance:/balanceâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/work:/workâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/armor:/armorâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/everywhere:/everywhereâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/daily:/dailyâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/time:/timeâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/anywhere:/anywhereâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/warmth:/warmthâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/limited:/limitedâ€”/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/noise:/noiseâ€”/g' {} ;)",
      "Bash(git commit -m \"$(cat <<''EOF''\nRestore em dashes in product narratives where grammatically correct\n\nCHANGE EXPLANATION:\n- Previously replaced all em dashes (â€”) with colons, which was grammatically incorrect\n- Em dashes are the correct punctuation for narrative interruptions and explanations\n- Restored em dashes in product stories and descriptions where they belong\n- Kept simplified \"Arc 2 Shadow\" and \"Arc 3 Light\" (no em dash) in titles/nav\n\nEXAMPLES OF RESTORED EM DASHES:\n- \"creationâ€”heavy, substantial, grounding\"\n- \"around youâ€”a field of calm in chaos\"\n- \"bridges statesâ€”functional armor\"\n- \"reimagines utilityâ€”keeping the function\"\n- \"finds the balanceâ€”minimal enough to wear daily\"\n\nThese are grammatically correct uses of em dashes for:\n- Interrupting thoughts with additional detail\n- Adding emphasis or explanation mid-sentence\n- Creating dramatic pauses in narrative flow\n\nBuild successful: 99 pages generated\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/collection:a world/collectionâ€”a world/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/collection:it/collectionâ€”it/g' {} ;)",
      "Bash(git commit -m \"$(cat <<''EOF''\nFix incorrect colons that should be em dashes\n\nFIXES:\n- \"powerfully:pieces\" â†’ \"powerfullyâ€”pieces\" (Arc 3 page)\n- \"collection:a world\" â†’ \"collectionâ€”a world\" (About page)\n- \"collection:it\" â†’ \"collectionâ€”it\" (Homepage)\n\nThese colons were grammatically incorrect. Em dashes are the proper punctuation\nfor these mid-sentence interruptions and explanations.\n\nBuild successful: 99 pages generated\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/flash:just/flashâ€”just/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/movement:warm/movementâ€”warm/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/movement:whether/movementâ€”whether/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/depth:pieces/depthâ€”pieces/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/in:you/inâ€”you/g' {} ;)",
      "Bash(find . -name \"*.tsx\" -type f -exec sed -i 's/trends:we/trendsâ€”we/g' {} ;)",
      "Bash(git commit -m \"$(cat <<''EOF''\nFix all remaining incorrect colons that should be em dashes\n\nCOMPREHENSIVE COLON FIXES:\n- \"principle: that\" â†’ \"principleâ€”that\" (About page)\n- \"flash:just\" â†’ \"flashâ€”just\" (Arc 2 Accessories)\n- \"movement:warm\" â†’ \"movementâ€”warm\" (Arc 2 Accessories)\n- \"movement:whether\" â†’ \"movementâ€”whether\" (Arc 2 Bottoms)\n- \"depth:pieces\" â†’ \"depthâ€”pieces\" (Arc 2 page)\n- \"in:you\" â†’ \"inâ€”you\" (Arc 2 page)\n- \"trends:we\" â†’ \"trendsâ€”we\" (Arc 2 Bottoms page)\n\nAll these colons were grammatically incorrect. Em dashes are proper for\nmid-sentence interruptions, explanations, and dramatic pauses.\n\nBuild successful: 99 pages generated\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nFix sound button on homepage to actually play/pause audio\n\nSOUND BUTTON FIX:\n- Added audio element initialization with useEffect\n- Audio loads /ambient.mp3 on component mount\n- Sets volume to 30% and enables looping\n- Sound toggle now actually plays/pauses the audio\n- Added proper cleanup on component unmount\n- Error handling for audio playback failures\n\nHOW IT WORKS:\n- Button creates Audio element with /ambient.mp3 file\n- Clicking button toggles soundEnabled state\n- useEffect watches soundEnabled and plays/pauses accordingly\n- Icon updates: Volume2 when playing, VolumeX when muted\n\nNOTE: Requires ambient.mp3 file in public folder to work\n\nBuild successful: 99 pages generated\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npm run build:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd proof-of-concept THERMAL product with color system\n\nPROOF OF CONCEPT - NEW PRODUCT ARCHITECTURE:\n\nCreated THERMAL product at /arc-2/tops/thermal demonstrating:\n\n1. **Color Selector System**\n   - 5 Arc 2 Shadow colors: VOID, STEEL, BLOOD, MOSS, EARTH\n   - Visual color swatches with live preview\n   - Smooth animations on color change\n   - Color-specific product image backgrounds\n\n2. **Dynamic Color Stories**\n   - Unique story for each color variant\n   - Ties garment philosophy to color meaning\n   - Example: MOSS connects to earth, BLOOD to intensity\n\n3. **\"Pairs With\" Recommendations**\n   - Based on color theory (fashion science)\n   - Cross-arc pairings (MOSS + SAND, STEEL + MIST)\n   - Same-arc pairings (VOID + STEEL, MOSS + EARTH)\n   - Shows why each pairing works\n\n4. **Base Product Data Structure**\n   - Created /src/data/products.ts\n   - All 22 base products defined\n   - Ready to roll out across site\n\nFEATURES DEMONSTRATED:\n- Color selector with hex values\n- Size selector (adapts to product type)\n- Add to cart with color + size\n- Enhanced notifications\n- Parallax image effects\n- \"The Story\" section (color-aware)\n- Pairs With section (3-4 smart recommendations)\n\nNEXT STEPS:\n- Get approval on this system\n- Roll out to all 22 base products\n- Update category pages\n\nBuild successful - new /arc-2/tops/thermal page works\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(node generate-products.js:*)",
      "Bash(1)",
      "Bash(git commit:*)",
      "Bash(node update-category-pages.js:*)",
      "Bash(node update-checkout-premium.js:*)",
      "Bash(node update-cart-premium.js:*)",
      "Bash(node update-product-liquid.js:*)",
      "Bash(node fix-accessories-and-ctas.js:*)",
      "Bash(node transform-to-liquid-glass.js:*)",
      "Bash(node:*)",
      "Bash(git checkout:*)",
      "Bash(for product in thermal hoodie denim tee longsleeve crewneck overshirt puffer cargo joggers sweats shorts beanie cap belt gloves socks ring)",
      "Bash(done)",
      "Bash(python update_reviews.py:*)",
      "Bash(python complete_reviews_fix.py:*)",
      "Bash(python fix_reviews_final.py:*)"
    ],
    "deny": [],
    "ask": []
  }
}
